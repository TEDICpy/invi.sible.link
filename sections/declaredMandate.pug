block declaredMandate
  ol
    li(class="activity-1") Improve browser emulation and javascript sand boxing, integrating the Honeynet project Thug (https://github.com/buffer/thug) technically this allows us to get a list of all the javascript functions executed going beyond just a static source code analysis
    li(class="activity-2") Having a data sharing capability in every node, and look for differences between tracking code
    li(class="activity-3") In browser visualization of the results, usable to monitor the trend or visually identify anomalies
    li(class="activity-4") Import the browser history of a person to map their profile of exposure / support community driven input (through github files), this approach would allow a more personalized analysis, that goes beyond just looking at the Alexa top 500 sites for each country
    li(class="activity-5") Integrate the tool developed by 
      a(href="http://randomwalker.info/publications/OpenWPM_1_million_site_tracking_measurement.pdf") Princeton university in doing trackers fingerprinting
      |, this will provide an intermediate level of detail, still lower than the Thug code analysis capability
    li(class="activity-6") Research into how to identify anomalies and tracking related functionality based on the dynamic code analysis provided by 1.
    li(class="activity-7") Research into the privacy implications and device fingerprinting used in tracking
    li(class="activity-8") Support Latin American communities running the tool, interpolating their results
    li(class="activity-9") Write a research report
    li(class="activity-10") Work with CodingRights in disseminating the results in Latin American communities
    li(class="activity-11") Researcher visualization: the difference between this and point 3 is the amount of detail provided
    li(class="activity-12") Wrapping up the project and performing last touches and cleanups
